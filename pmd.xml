<?xml version="1.0" encoding="UTF-8"?>
<!--

 Copyright 2015 Martin Goellnitz

 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public License
 along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
<ruleset xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns='http://pmd.sourceforge.net/ruleset/2.0.0'
         xsi:schemaLocation='http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd'>

  <rule ref="rulesets/java/android.xml"/>
  <rule ref="rulesets/java/basic.xml">
    <exclude name="CollapsibleIfStatements"/>
  </rule>
  <rule ref="rulesets/java/braces.xml"/>
  <rule ref="rulesets/java/clone.xml"/>
  <rule ref="rulesets/java/codesize.xml">
    <exclude name="NPathComplexity"/>
    <exclude name="CyclomaticComplexity"/>
    <exclude name="StdCyclomaticComplexity"/>
    <exclude name="ModifiedCyclomaticComplexity"/>
    <exclude name="NcssConstructorCount"/>
    <exclude name="TooManyMethods"/>
    <exclude name="ExcessiveParameterList"/>
    <exclude name="ExcessiveMethodLength"/>
  </rule>
  <rule ref="rulesets/java/codesize.xml/ExcessiveParameterList">
    <properties>
      <property name="minimum" value="12" />
    </properties>
  </rule>
  <rule ref="rulesets/java/codesize.xml/ExcessiveMethodLength">
    <properties>
      <property name="minimum" value="150" />
    </properties>
  </rule>
  <rule ref="rulesets/java/comments.xml">
    <exclude name="CommentSize"/>
  </rule>
  <rule ref="rulesets/java/comments.xml/CommentRequired">
    <properties>
      <property name="fieldCommentRequirement" value="Ignored" />
      <property name="protectedMethodCommentRequirement" value="Ignored" />
      <property name="publicMethodCommentRequirement" value="Ignored" />
    </properties>
  </rule>
  <rule ref="rulesets/java/controversial.xml">
    <exclude name="DataflowAnomalyAnalysis"/>
    <exclude name="UseConcurrentHashMap"/>
    <exclude name="NullAssignment"/>
    <exclude name="AvoidLiteralsInIfCondition"/>
    <exclude name="OnlyOneReturn"/>
    <exclude name="UseObjectForClearerAPI"/>
    <exclude name="CallSuperInConstructor"/>
    <exclude name="AtLeastOneConstructor"/>
  </rule>
  <rule ref="rulesets/java/coupling.xml">
    <exclude name="LawOfDemeter"/>
    <exclude name="ExcessiveImports"/>
    <exclude name="LoosePackageCoupling"/>
  </rule>
  <rule ref="rulesets/java/design.xml">
    <exclude name="UncommentedEmptyConstructor"/>
    <exclude name="AvoidReassigningParameters"/>
    <exclude name="GodClass"/>
    <exclude name="UseCollectionIsEmpty"/>
    <exclude name="AvoidDeeplyNestedIfStmts"/>
    <exclude name="ConfusingTernary"/>
    <exclude name="SimpleDateFormatNeedsLocale"/>
    <exclude name="UseLocaleWithCaseConversions"/>
    <exclude name="CompareObjectsWithEquals"/>
    <exclude name="FieldDeclarationsShouldBeAtStartOfClass"/>
    <exclude name="UseVarargs"/>
    <!-- results in false positives: -->
    <exclude name="ClassWithOnlyPrivateConstructorsShouldBeFinal"/>
    <!-- this may be a problem - or not -->
    <exclude name="SingleMethodSingleton"/>
  </rule>
  <rule ref="rulesets/java/empty.xml"/>
  <rule ref="rulesets/java/finalizers.xml"/>
  <rule ref="rulesets/java/imports.xml"/>
  <rule ref="rulesets/java/j2ee.xml"/>
  <rule ref="rulesets/java/javabeans.xml">
    <exclude name="BeanMembersShouldSerialize"/>
  </rule>
  <rule ref="rulesets/java/junit.xml"/>
  <rule ref="rulesets/java/logging-jakarta-commons.xml">
    <exclude name="GuardLogStatement"/>
    <exclude name="GuardDebugLogging"/>
  </rule>
  <rule ref="rulesets/java/logging-java.xml">
    <exclude name="GuardLogStatementJavaUtil"/>
  </rule>
  <rule ref="rulesets/java/migrating.xml">
    <exclude name="LongInstantiation"/>
    <exclude name="IntegerInstantiation"/>
  </rule>
  <rule ref="rulesets/java/naming.xml">
    <exclude name="LongVariable"/>
    <exclude name="ShortVariable"/>
    <exclude name="ShortMethodName"/>
    <exclude name="ShortClassName"/>
    <exclude name="AbstractNaming"/>
    <exclude name="AvoidFieldNameMatchingTypeName"/>
  </rule>
  <rule ref="rulesets/java/naming.xml/LongVariable">
    <properties>
      <property name="minimum" value="34" />
    </properties>
  </rule>
  <rule ref="rulesets/java/optimizations.xml">
    <exclude name="AvoidInstantiatingObjectsInLoops"/>
    <exclude name="LocalVariableCouldBeFinal"/>
    <exclude name="MethodArgumentCouldBeFinal"/>
    <exclude name="UseStringBufferForStringAppends"/>
    <exclude name="RedundantFieldInitializer"/>
    <exclude name="AddEmptyString"/>
    <exclude name="SimplifyStartsWith"/>
  </rule>
  <rule ref="rulesets/java/strictexception.xml">
    <exclude name="AvoidThrowingRawExceptionTypes"/>
    <exclude name="AvoidCatchingGenericException"/>
    <exclude name="AvoidCatchingThrowable"/>
    <exclude name="SignatureDeclareThrowsException"/>
  </rule>
  <rule ref="rulesets/java/strings.xml">
    <exclude name="AvoidDuplicateLiterals"/>
    <exclude name="ConsecutiveAppendsShouldReuse"/>
  </rule>
  <rule ref="rulesets/java/sunsecure.xml">
    <exclude name="ArrayIsStoredDirectly"/>
    <exclude name="MethodReturnsInternalArray"/>
  </rule>
  <rule ref="rulesets/java/typeresolution.xml">
    <exclude name="SignatureDeclareThrowsException"/>
  </rule>
  <rule ref="rulesets/java/unnecessary.xml">
    <exclude name="UselessParentheses"/>
  </rule>
  <rule ref="rulesets/java/unusedcode.xml"/>

</ruleset>
