<?xml version="1.0" encoding="utf-8"?>
<!-- 
  
 Copyright 2011-2014 Martin Goellnitz
  
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU Lesser General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU Lesser General Public License for more details.
 
 You should have received a copy of the GNU Lesser General Public License
 along with this program. If not, see <http://www.gnu.org/licenses/>.
 
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd">

  <!--  this should include as few packages as possible -->
  <context:component-scan base-package="org.tangram.components" />

  <bean id="viewContextFactory" class="org.tangram.view.DynamicViewContextFactory" />

  <bean id="linkFactoryAggregator" class="org.tangram.link.GenericLinkFactoryAggregator">
    <property name="dispatcherPath" value="${tangram.servlet.path}" />
  </bean>

  <bean id="viewSettings" class="java.util.HashMap">
    <constructor-arg>
      <map>
        <entry key="cssCacheTime" value="${css.cache.time}" />
        <entry key="jsCacheTime" value="${js.cache.time}" />
        <entry key="imageCacheTime" value="${image.cache.time}" />
      </map>
    </constructor-arg>
  </bean>

  <!--  generic base for dynamic velocity  -->

  <bean id="velocityPatch" class="org.tangram.view.velocity.VelocityPatchBean" />

  <!-- really spring specific stuff -->

  <!-- 
       just a small set if URLs which don't need performance measurement and logins. 
       Re-define this in your WEB-INF/tangram directory with values as needed
  -->  
  <bean id="freeUrls" class="java.util.HashSet">
    <constructor-arg>
      <set>
        <value>${tangram.servlet.path}/stats</value>
        <value>${tangram.servlet.path}/clear/caches</value>
      </set>
    </constructor-arg>
  </bean>
    
  <!-- 
       just an empty set of admin users as a default. 
       Re-define this in your WEB-INF/tangram directory with values as needed
  -->  
  <bean id="adminUsers" class="java.util.HashSet" />
    
  <!-- 
       just an empty set of allowed users as a default - to let everyone pass.
       Re-define this in your WEB-INF/tangram directory with values as needed
  -->  
  <bean id="allowedUsers" class="java.util.HashSet" />
  
  <bean id="measureTimeInterceptor" class="org.tangram.spring.MeasureTimeInterceptor">
    <property name="freeUrls" ref="freeUrls"/>
  </bean>
  
  <bean id="passwordInterceptor" class="org.tangram.spring.PasswordInterceptor">
    <property name="freeUrls" ref="freeUrls"/>
    <property name="allowedUsers" ref="allowedUsers"/>
    <property name="adminUsers" ref="adminUsers"/>
  </bean>
  
  <!-- 
       The common default list of interceptors for time measurement and login check.
       Re-define this in your WEB-INF/tangram directory with values as needed.
  -->  
  <bean name="interceptors" class="java.util.ArrayList">
    <constructor-arg>
      <list>
        <ref bean="measureTimeInterceptor"/>
        <ref bean="passwordInterceptor"/>
      </list>
    </constructor-arg>
  </bean>
  
  <!--
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
  -->
  <bean id="propertyConfigurer" class="org.tangram.spring.PropertySplittingPlaceholderConfigurer">
    <property name="locations">
      <list>
        <value>classpath*:/tangram/*.properties</value>
        <value>/WEB-INF/tangram/*.properties</value>
      </list>
    </property>
  </bean>

  <!-- mapping for all of our and your @controllers -->
  <bean id="handlerMapping" class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
    <property name="order" value="10" />
    <property name="interceptors" ref="interceptors" />
  </bean>

  <!-- give the meta controller for repository based URL format definitions a special handling and priority -->
  <bean class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">
    <property name="mappings">
      <value>
        /**=metaController
      </value>
    </property>
    <property name="order" value="100" />
    <property name="interceptors" ref="interceptors"/>
  </bean>

  <bean id="plainJspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
  </bean>

  <bean id="jspViewResolver" class="org.tangram.spring.view.ModelAwareInternalResourceViewResolver">
    <property name="name" value="JSP-Files" />
    <property name="delegate" ref="plainJspViewResolver" />
    <property name="order" value="65435" />
    <property name="prefix" value="/WEB-INF/view/jsp/" />
    <property name="suffix" value=".jsp" />
    <property name="activateCaching" value="true" />
  </bean>

  <!--
    path resolver s only used when velocity is used with classpath loading which results in too many exception when it falls
    back to JSP views
  -->
  <bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
    <property name="velocityProperties">
      <value>
        input.encoding=UTF-8
        output.encoding=UTF-8
        resource.loader=tangram
        tangram.resource.loader.class=org.tangram.view.velocity.VelocityResourceLoader
        tangram.resource.loader.cachingOn=true
        tangram.resource.loader.modificationCheckInterval=30
        userdirective=org.tangram.view.velocity.IncludeDirective,org.tangram.view.velocity.LinkDirective
      </value>
    </property>
  </bean>

  <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
    <property name="velocityEngine" ref="velocityEngine" />
  </bean>

  <bean id="plainRepositoryVelocityViewResolver" class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
    <property name="cache" value="true" />
    <property name="prefix" value="" />
    <property name="suffix" value="" />
  </bean>

  <!--  not only for editing but also custom web applications wanting to read larger portions from the web client  -->

  <bean id="multipartResolver" class="org.tangram.spring.StreamingMultipartResolver">
    <property name="maxUploadSize" value="${tangram.max.upload.size}" />
  </bean>

  <!-- really spring specific stuff end -->

</beans>
