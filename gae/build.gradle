/**
 * 
 * Copyright 2011 Martin Goellnitz
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */
apply from: '../commons.gradle'

war.dependsOn ':jdo:war'

dependencies {
    webapp project (':jdo')

    providedCompile "javax.servlet:servlet-api:$servlet_spec"
    providedCompile "javax.servlet:jsp-api:$jsp_spec"
    compile project (':jdo')

    compile "com.google.appengine:appengine-api-1.0-sdk:$appengine_version"
    compile "com.google.appengine:appengine-api-labs:$appengine_version"
    compile "com.google.appengine:appengine-jsr107cache:$appengine_version"

    compile "$jdo_api"
    compile "org.apache.geronimo.specs:geronimo-jpa_3.0_spec:1.1.1"
    compile "org.datanucleus:datanucleus-core:1.1.5"
    compile "org.datanucleus:datanucleus-jpa:1.1.5"
    compile "com.google.appengine.orm:datanucleus-appengine:1.0.8"
    compile "net.sf.jsr107cache:jsr107cache:1.1"

    compile "commons-lang:commons-lang:2.6"

    testCompile "junit:junit:4.10"

    providedCompile "org.apache.ant:ant:1.8.4"
    dn "org.datanucleus:datanucleus-enhancer:1.1.4"
}

compileJava.doLast {
    try {
        // println 'configurations: '+configurations.dn.asPath
        ant.taskdef(name: 'enhance', classpath: configurations.dn.asPath, classname: 'org.datanucleus.enhancer.tools.EnhancerTask')
        ant.enhance(failonerror: true, verbose: true, checkonly: false, dir: sourceSets['main'].output.classesDir.canonicalPath) {
            classpath {
                // for the log configuration...
                pathelement(path: '.')
                // The classes to be enhanced need to be on the class path
                pathelement(path: sourceSets['main'].output.classesDir.canonicalPath)
                // this is the real class path for the tool (s.a.)
                pathelement(path: configurations.dn.asPath)
                // this is the real class path for the tool (s.a.)
                pathelement(path: sourceSets['main'].compileClasspath.asPath)
            }
            fileset(dir: sourceSets['main'].output.classesDir.canonicalPath)
        }
    } catch(Exception e) {
        println ''
        e.printStackTrace(System.out);
        throw new GradleException('An error occurred enhancing persistence capable classes.', e)
    }
}
