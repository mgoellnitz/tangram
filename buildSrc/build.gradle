/**
 *
 * Copyright 2013-2016 Martin Goellnitz
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 *
 */
import groovy.util.Node
import groovy.util.GroovyScriptEngine

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
  }
}

plugins {
  id 'com.gradle.plugin-publish' version '0.9.4'
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.artifactory'

defaultTasks 'clean', 'publishToMavenLocal'

version '1.2-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

def bootClasspathStr = "${project.hasProperty('jdk') ? jdk : System.env.JAVA_HOME}/jre/lib/rt.jar"
project.tasks.withType(AbstractCompile, { AbstractCompile ac ->
    ac.options.bootClasspath = bootClasspathStr
})

String[] roots = ["${project.projectDir}/src/main/groovy"]
def versions = new GroovyScriptEngine(roots).loadScriptByName('org/tangram/gradle/plugin/TangramVersions.groovy').newInstance()

repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile "com.yahoo.platform.yui:yuicompressor:$versions.yui"
  // persistence APIs
  compile "$versions.jdo_api"
  compile "$versions.persistence_api"
  // for the direct datanucleus enhancer
  compile "org.datanucleus:datanucleus-core:$versions.datanucleus"
  compile "org.datanucleus:datanucleus-api-jdo:$versions.datanucleus"
  compile "org.datanucleus:datanucleus-api-jpa:$versions.datanucleus"
  // for the direct eclipselink enhancer
  compile "org.eclipse.persistence:org.eclipse.persistence.jpa:$versions.eclipselink"
  // For the direct ebean enhancer
  compile "org.avaje.ebeanorm:avaje-ebeanorm:$versions.ebean"
  compile "org.avaje.ebeanorm:avaje-ebeanorm-agent:$versions.ebean_agent"
  // For the direct hibernate enhancer
  // compile 'org.javassist:javassist:3.20.0-GA'
  compile 'net.bytebuddy:byte-buddy:1.5.4'
  compile "org.hibernate:hibernate-core:$versions.hibernate"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'javadoc'
  from "${buildDir}/docs/groovydoc"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      if (gradle.gradleVersion != '1.6') {
        groupId 'tangram'
        artifactId 'gradle-plugin'
      }
      from components.java
      artifact sourcesJar
      artifact groovydocJar
      pom.withXml {
        def rootNode = asNode()
        rootNode.children().get(3).plus {
          new Node(rootNode, 'name', "Tangram Gradle plugin")
          new Node(rootNode, 'description', 'Object oriented templating and dynamic web development framework')
          new Node(rootNode, 'url', 'https://github.com/mgoellnitz/tangram/')
          def license = new Node(rootNode, 'licenses').appendNode('license')
          license.appendNode('name', 'LGPL-3.0')
          license.appendNode('url', 'http://opensource.org/licenses/LGPL-3.0')
          license
          def issues = new Node(rootNode, 'issueManagement')
          issues.appendNode('system', 'mail')
          issues.appendNode('url', 'mailto:tangram@provocon.de')
          issues
          def scm = new Node(rootNode, 'scm')
          scm.appendNode('connection', 'scm:git:git@github.com:mgoellnitz/tangram.git')
          scm.appendNode('developerConnection', 'scm:git:git@github.com:mgoellnitz/tangram.git')
          scm.appendNode('url', 'https://github.com/mgoellnitz/tangram.git')
          scm
          def developer = rootNode.appendNode('developers').appendNode('developer')
          developer.appendNode('name', 'Martin Goellnitz')
          developer.appendNode('organization', 'Provocon')
          developer.appendNode('organizationUrl', 'http://www.provocon.de/')
          developer
        }
      }
    }
  }
}

pluginBundle {
  website = 'https://github.com/mgoellnitz/tangram/wiki/Plugin'
  vcsUrl = 'https://github.com/mgoellnitz/tangram/'
  description = 'Generic JPA, JDO, EBean byte code transformation plugin, webapp overlay helper, and minifying plugin developed for Tangram - Verson 1.1.2 is again JDK 1.7 compatible'
  tags = ['tangram', 'jdo', 'jpa', 'ebean', 'datanucleus', 'eclipselink', 'hibernate', 'openjpa', 'overlay', 'minify']

  plugins {
    greetingsPlugin {
      id = 'tangram.tools'
      displayName = 'Tangram Gradle plugin'
    }
  }
}
